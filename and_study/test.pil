# File generated by peppercorn-v1.1.1

# Domains (7) 
sequence one = GGTGGG : 6
sequence one* = CCCACC : 6
sequence reg0 = CGTGGCTCACCACGCGTATACGCCGACGCC : 30
sequence reg0* = GGCGTCGGCGTATACGCGTGGTGAGCCACG : 30
sequence reg1 = CGACGTGCGCGTGTGCGTCTACAGGCCCCC : 30
sequence reg1* = GGGGGCCTGTAGACGCACACGCGCACGTCG : 30
sequence tag = ACAGTA : 6

# Input strands or composite domains (4) 
sup-sequence stripper = one* reg1* one* reg0*
sup-sequence backbone = reg1* reg0*
sup-sequence data0_1s = tag reg0 one
sup-sequence data1_1s = tag reg1 one

# Resting complexes (12) 
cStrip = one* reg1* one* reg0*
e1 = tag reg0( one( + ) reg1* one* )
left_with_strip = tag reg0( one( + one* reg1* ) )
e2 = tag reg0( one + one* reg1* one* )
success_match = tag reg0( one( + tag reg1( one( + ) ) ) )
right_with_strip = tag reg1( one( + ) ) one* reg0*
cBackbone = reg1* reg0*
left_with_backbone = tag reg0( one + reg1* )
failure_match = tag reg0( one + tag reg1( one + ) )
right_with_backbone = tag reg1( one + ) reg0*
cData0_1s = tag reg0 one
cData1_1s = tag reg1 one

# Resting macrostates (10) 
macrostate cStrip = [cStrip]
macrostate left_with_strip = [left_with_strip, e1, e2]
macrostate success_match = [success_match]
macrostate right_with_strip = [right_with_strip]
macrostate cBackbone = [cBackbone]
macrostate left_with_backbone = [left_with_backbone]
macrostate failure_match = [failure_match]
macrostate right_with_backbone = [right_with_backbone]
macrostate cData0_1s = [cData0_1s]
macrostate cData1_1s = [cData1_1s]

# Condensed reactions (17) 
reaction [condensed    = 0.00203032 /nM/s ] cStrip + left_with_backbone -> left_with_strip + cBackbone
reaction [condensed    = 0.00202638 /nM/s ] cStrip + failure_match -> left_with_strip + right_with_backbone
reaction [condensed    = 0.00178239 /nM/s ] cStrip + failure_match -> right_with_strip + left_with_backbone
reaction [condensed    = 0.00175272 /nM/s ] cStrip + right_with_backbone -> right_with_strip + cBackbone
reaction [condensed    =  0.0125689 /nM/s ] cStrip + cData0_1s -> left_with_strip
reaction [condensed    =  0.0110142 /nM/s ] cStrip + cData1_1s -> right_with_strip
reaction [condensed    = 3.19495e-13 /nM/s ] left_with_strip + right_with_strip -> cStrip + success_match
reaction [condensed    = 0.00162217 /nM/s ] left_with_strip + failure_match -> success_match + left_with_backbone
reaction [condensed    = 0.00158804 /nM/s ] left_with_strip + right_with_backbone -> success_match + cBackbone
reaction [condensed    =  0.0107987 /nM/s ] left_with_strip + cData1_1s -> success_match
reaction [condensed    = 0.00179204 /nM/s ] right_with_strip + left_with_backbone -> success_match + cBackbone
reaction [condensed    = 0.00179204 /nM/s ] right_with_strip + failure_match -> success_match + right_with_backbone
reaction [condensed    =     0.0108 /nM/s ] right_with_strip + cData0_1s -> success_match
reaction [condensed    =      0.009 /nM/s ] cBackbone + cData0_1s -> left_with_backbone
reaction [condensed    =      0.009 /nM/s ] cBackbone + cData1_1s -> right_with_backbone
reaction [condensed    =      0.009 /nM/s ] left_with_backbone + cData1_1s -> failure_match
reaction [condensed    =      0.009 /nM/s ] right_with_backbone + cData0_1s -> failure_match
